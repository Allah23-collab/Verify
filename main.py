
import discord
from discord.ext import commands
from discord import app_commands
from keep_alive import keep_alive
import os

TOKEN = os.environ.get("DISCORD_BOT_TOKEN")
GUILD_ID = 1200797806940659752
ADMIN_CHANNEL_ID = 1200802706156158996
ADMIN_ID = 1351933535627378719
ROLE_ID = 1360969155708190771

intents = discord.Intents.default()
intents.message_content = True
intents.members = True

bot = commands.Bot(command_prefix="!", intents=intents)
tree = bot.tree

class ApproveView(discord.ui.View):
    def __init__(self, user: discord.Member):
        super().__init__(timeout=None)
        self.user = user

    @discord.ui.button(label="‚úÖ Approve", style=discord.ButtonStyle.success)
    async def approve(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.user.id != ADMIN_ID:
            return await interaction.response.send_message("‚ùå ‡∏°‡∏∂‡∏á‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô", ephemeral=True)
        role = interaction.guild.get_role(ROLE_ID)
        if role is None:
            return await interaction.response.send_message(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏¢‡∏®", ephemeral=True)
        try:
            await self.user.add_roles(role)
            await interaction.response.send_message(f"‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏¢‡∏®‡πÉ‡∏´‡πâ {self.user.mention} ‡πÅ‡∏•‡πâ‡∏ß")
        except discord.Forbidden:
            await interaction.response.send_message("üö´ ‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏´‡πâ‡∏¢‡∏®", ephemeral=True)
        except Exception as e:
            await interaction.response.send_message(f"‚ùå Error: {str(e)}", ephemeral=True)

    @discord.ui.button(label="‚ùå Reject", style=discord.ButtonStyle.danger)
    async def reject(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.user.id != ADMIN_ID:
            return await interaction.response.send_message("‚ùå ‡∏°‡∏∂‡∏á‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô", ephemeral=True)
        try:
            await self.user.send(
                "‚ùå ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á‡∏°‡∏∂‡∏á‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏î‡πâ‡∏ß‡∏¢ `/grooming`

"
                "üìå ‡∏ï‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡∏î‡∏π‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏à‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏ô‡∏∞‡πÄ‡∏ß‡πâ‡∏¢ üòé"
            )
            await interaction.response.send_message(f"üì® ‡πÅ‡∏à‡πâ‡∏á {self.user.mention} ‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
        except discord.Forbidden:
            await interaction.response.send_message("‚ö†Ô∏è ‡∏™‡πà‡∏á DM ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ", ephemeral=True)

class GroomingModal(discord.ui.Modal, title="üìõ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏¢‡∏® Kai Grooming Fc"):
    answer = discord.ui.TextInput(
        label="‡∏°‡∏∂‡∏á‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å Kai Grooming ‡πÑ‡∏î‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏á?",
        style=discord.TextStyle.paragraph,
        required=True,
        max_length=500
    )
    def __init__(self, user):
        super().__init__()
        self.user = user
    async def on_submit(self, interaction: discord.Interaction):
        embed = discord.Embed(
            title="‚úÇÔ∏è ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ",
            description=f"**‡∏à‡∏≤‡∏Å:** {self.user.mention}

```{self.answer.value}```",
            color=discord.Color.orange()
        )
        view = ApproveView(self.user)
        channel = bot.get_channel(ADMIN_CHANNEL_ID)
        if not channel:
            return await interaction.response.send_message("‚ùå ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô", ephemeral=True)
        await channel.send(embed=embed, view=view)
        await interaction.response.send_message("üì® ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)

class FormButtonView(discord.ui.View):
    def __init__(self, user):
        super().__init__(timeout=None)
        self.user = user
    @discord.ui.button(label="üìù ‡∏Å‡∏£‡∏≠‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏¢‡∏®", style=discord.ButtonStyle.primary)
    async def open_form(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.user.id != self.user.id:
            return await interaction.response.send_message("‚ùå ‡∏°‡∏∂‡∏á‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ", ephemeral=True)
        await interaction.response.send_modal(GroomingModal(self.user))

@tree.command(name="grooming", description="‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏¢‡∏® Kai Grooming Fc", guild=discord.Object(id=GUILD_ID))
async def grooming(interaction: discord.Interaction):
    embed = discord.Embed(
        title="üìõ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏¢‡∏® Kai Grooming Fc",
        description="‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏£‡∏≠‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏°‡∏±‡∏Ñ‡∏£ Kai Grooming Fc",
        color=discord.Color.blue()
    )
    await interaction.response.send_message(embed=embed, view=FormButtonView(interaction.user), ephemeral=True)

@bot.event
async def on_ready():
    await tree.sync(guild=discord.Object(id=GUILD_ID))
    print(f"‚úÖ Bot ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏•‡πâ‡∏ß: {bot.user}")

keep_alive()
bot.run(TOKEN)
